import { ParsedTransactionWithMeta, PublicKey } from '@solana/web3.js';
import { Rpc } from '../../rpc';
import { PublicTransactionEvent } from '../../state';
import { Buffer } from 'buffer';
type Deserializer<T> = (data: Buffer, tx: ParsedTransactionWithMeta) => T;
/**
 * @internal
 * Returns newest first.
 *
 * */
export declare function getParsedEvents(rpc: Rpc): Promise<PublicTransactionEvent[]>;
export declare const parseEvents: <T>(indexerEventsTransactions: (ParsedTransactionWithMeta | null)[], deserializeFn: Deserializer<T>) => NonNullable<T>[];
export declare const parsePublicTransactionEventWithIdl: (data: Buffer) => PublicTransactionEvent | null;
export declare function parseLightTransaction(dataVec: Uint8Array[], accountKeys: PublicKey[][]): PublicTransactionEvent | null | undefined;
export {};
